document.addEventListener('DOMContentLoaded', () => {
    const navSlide = () => {
        const burger = document.querySelector('.burger');
        const nav = document.querySelector('.nav-links');
        const navLinks = document.querySelectorAll('.nav-links li');

        burger.addEventListener('click', () => {
            nav.classList.toggle('nav-active');
            burger.setAttribute('aria-expanded', nav.classList.contains('nav-active'));

            navLinks.forEach((link, index) => {
                if (link.style.animation) {
                    link.style.animation = '';
                } else {
                    link.style.animation = `navLinkFade 0.5s ease forwards ${index / 7 + 0.3}s`;
                }
            });

            burger.classList.toggle('toggle');
        });
    }

    const characterHover = () => {
        const characters = document.querySelectorAll('.character-card');

        characters.forEach(character => {
            const handleEnter = () => {
                const name = character.getAttribute('data-name');
                const description = character.getAttribute('data-description');
                character.setAttribute('aria-label', `${name} - ${description}`);
            };

            const handleLeave = () => {
                const name = character.getAttribute('data-name');
                character.setAttribute('aria-label', name);
            };

            character.addEventListener('mouseenter', handleEnter);
            character.addEventListener('focus', handleEnter);
            character.addEventListener('mouseleave', handleLeave);
            character.addEventListener('blur', handleLeave);
        });
    }

    const carouselSetup = () => {
        const track = document.querySelector('.carousel-track');
        const slides = Array.from(track.children);
        const nextButton = document.querySelector('.carousel-button.next');
        const prevButton = document.querySelector('.carousel-button.prev');

        const slideWidth = slides[0].getBoundingClientRect().width;

        const setSlidePosition = (slide, index) => {
            slide.style.left = slideWidth * index + 'px';
        };
        slides.forEach(setSlidePosition);

        const moveToSlide = (track, currentSlide, targetSlide) => {
            track.style.transform = 'translateX(-' + targetSlide.style.left + ')';
            currentSlide.classList.remove('current-slide');
            targetSlide.classList.add('current-slide');
            
            // Update ARIA attributes
            currentSlide.setAttribute('aria-hidden', 'true');
            targetSlide.setAttribute('aria-hidden', 'false');
        };

        const updateButtons = (targetIndex) => {
            prevButton.disabled = targetIndex === 0;
            nextButton.disabled = targetIndex === slides.length - 1;
        };

        nextButton.addEventListener('click', e => {
            const currentSlide = track.querySelector('.current-slide');
            const nextSlide = currentSlide.nextElementSibling;
            if (nextSlide) {
                moveToSlide(track, currentSlide, nextSlide);
                updateButtons(slides.indexOf(nextSlide));
            }
        });

        prevButton.addEventListener('click', e => {
            const currentSlide = track.querySelector('.current-slide');
            const prevSlide = currentSlide.previousElementSibling;
            if (prevSlide) {
                moveToSlide(track, currentSlide, prevSlide);
                updateButtons(slides.indexOf(prevSlide));
            }
        });

        // Keyboard navigation
        track.addEventListener('keydown', e => {
            if (e.key === 'ArrowRight') {
                nextButton.click();
            } else if (e.key === 'ArrowLeft') {
                prevButton.click();
            }
        });

        // Set initial state
        slides[0].classList.add('current-slide');
        slides[0].setAttribute('aria-hidden', 'false');
        slides.slice(1).forEach(slide => slide.setAttribute('aria-hidden', 'true'));
        updateButtons(0);
    }

    navSlide();
    characterHover();
    carouselSetup();
});
